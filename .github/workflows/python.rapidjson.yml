name: Docker

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        python:
        - "3.10"

    steps:
    # - name: Checkout
    #   uses: actions/checkout@v3

    # - name: Setup - buildx
    #   uses: docker/setup-buildx-action@v2

    # - name: Setup - Github Container Registry
    #   uses: docker/login-action@v2
    #   with:
    #     registry: ghcr.io
    #     username: ${{ github.actor }}
    #     password: ${{ github.token }}

    # - name: Setup
    #   id: config
    #   run: |
    #     NPROC=$(nproc)
    #     echo "NPROC=$NPROC" >> $GITHUB_ENV
    #     echo "::set-output name=NPROC::$NPROC"

    # - name: Build
    #   uses: docker/build-push-action@v3
    #   id: build
    #   with:
    #     context: python-rapidjson
    #     build-args: |
    #       python=${{ matrix.python }}
    #       protobuf_version=${{ matrix.protobuf_version }}
    #       python_protobuf_version=${{ matrix.python_protobuf_version }}
    #       MAKEFLAGS=-j${{ steps.config.outputs.NPROC }}
    #     cache-from: type=gha
    #     cache-to: type=gha,mode=max
      - uses: actions/checkout@v3

      - name: Setup - QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2.2.0
      with:
        platforms: linux/amd64, linux/arm64

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.14.1

      - name: Install cibuildwheel
        run: -|
          apk add --no-cache --virtual .build-deps \
                cmake \
                git \
                build-base \
                openssl-dev \
                libffi-dev \
                zlib-dev \
                linux-headers \
                pcre-dev \
                libxml2-dev \
                libxslt-dev \
                snappy-dev \
                bash \
                curl \
                rust \
                cargo \
                yaml-dev && \
                git clone https://github.com/python-rapidjson/python-rapidjson.git && \
          python -m pip install cibuildwheel==2.14.1 && \
          cd python-rapidjson && \
          git checkout tags/$RAPID_JSON_VERSION && \
            git submodule update --init && \
            python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ENVIRONMENT: CFLAGS="-march=armv8-a+simd" CPPFLAGS="-RAPIDJSON_NEON=1"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
